@using DungeDexFE.Client.Models;
<h3>MonsterComponent</h3>

@code {
    public Monster Monster { get; set; }
        /*
       protected override async Task OnInitializedAsync()
        {

            try{
          Random rand = new Random();
            var number = rand.next(1, list.max)
            var http = new HttpClient();
            var response = await http.GetFromJsonAsync<Monster>($"INSERT GET REQUEST HERE {number}");
            if(response != null)
            {
            Monster = response;
              STORE RESPONSE
            }

        }
        catch (HttpRequestException e)
            {
            Console.WriteLine(e.Message);

    }


        //
     }


    */



}
<!--
This component will load the data from the Monster Json file?
When this is called it should be called with This monster object = backend search with this {data}

Needs to intialise an object
Monster object changes depending on how we get there
Outputing an object when asked
IF already exist search our own db for it
IF NOT then 

on intial make a monster obj given the parameters 

which db you search depends on the parameters


-->
