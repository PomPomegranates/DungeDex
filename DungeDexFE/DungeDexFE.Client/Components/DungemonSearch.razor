@inject NavigationManager nav
@rendermode InteractiveAuto

<InputText @bind-Value="_inputText" @oninput="InputTextChanged"/>
<button @onclick="(e) => HandleSearch(e)">@(string.IsNullOrEmpty(_inputText) ? "Randomise!" : "Build Dungémon!")</button>

@code {
    [Parameter]
    public EventCallback<string> OnSearch { get; set; }

    private string? _inputText { get; set; }

    private async Task HandleSearch(MouseEventArgs e)
    {
        var searchString = string.Empty;

        if (string.IsNullOrEmpty(_inputText))
        {
            var rand = new Random();
            searchString = rand.Next(1, 1026).ToString();
        }
        else
        {
            searchString = _inputText;
        }

        await OnSearch.InvokeAsync(searchString);
    }

    private void InputTextChanged(ChangeEventArgs e)
    {
        _inputText = e.Value?.ToString() ?? null;
    }
}
