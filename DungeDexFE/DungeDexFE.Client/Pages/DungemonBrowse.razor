@page "/dungemon"
@rendermode InteractiveWebAssembly

@inject NavigationManager Nav

<PageTitle>DungéDex : Browse</PageTitle>

<h3>Browse Dungémon</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
	<p>@errorMessage</p>
}
else if (allDungemon != null)
{
	<DungemonTable dungemonList="allDungemon" />
}

@code {
	public List<Dungemon> allDungemon { get; set; } = null!;

	private string errorMessage { get; set; } = null!;

	private int currentOffset = 0;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			using var client = new HttpClient();
			allDungemon = await client.GetFromJsonAsync<List<Dungemon>>($"https://localhost:7298/api/UserDungeMon?number=20&offset={currentOffset}")
				?? throw new Exception("Unable to convert the server response into Dungémon.");
		}
		catch (HttpRequestException ex)
		{
			errorMessage = ex.Message;
		}
		catch (Exception ex)
		{
			errorMessage = "An error occurred while fetching the Dungémon data: " + ex.Message;
		}
	}
}
